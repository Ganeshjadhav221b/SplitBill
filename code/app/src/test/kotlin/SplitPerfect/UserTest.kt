/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package SplitPerfect

import SplitPerfect.domain.Groups
import SplitPerfect.domain.User
import SplitPerfect.domain.UserGroup
import SplitPerfect.services.implementations.*
import org.junit.Test
import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.BeforeEach
import org.junit.runner.RunWith
import org.springframework.boot.test.context.SpringBootTest
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment
import org.springframework.boot.test.mock.mockito.MockBean
import org.springframework.test.context.junit4.SpringRunner
import SplitPerfect.controllers.UserController as UserController1

@RunWith(SpringRunner::class)
@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
class UserControllerTest() {

    @BeforeEach
    fun initialize() {
    }

    @MockBean
    lateinit var userService: UserService

    @MockBean
    lateinit var expenseService: ExpenseService

    @MockBean
    lateinit var billService: BillService

    @MockBean
    lateinit var groupService: GroupService

    @MockBean
    lateinit var userGroupService: UserGroupService

    @Test
    fun checkUserCreation()
    {
        val user1 =  userService.addUser(User(1,"john","john@gmail.com",100))
        assertEquals(user1, user1?.Id?.let { userService.getUser(it) })
    }

    @Test
    fun checkUserDeletion()
    {
        val user1 =  userService.addUser(User(1,"john","john@gmail.com",100))
        if (user1 != null) {
            userService.deleteUser(user1.Id)
        }
        assertEquals(null, user1?.Id?.let { userService.getUser(it) })
    }
}
